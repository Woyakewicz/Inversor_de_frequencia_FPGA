module Switch_debouncer
(
	input clk,
	input SW,
	output SW_debounced
);
	
	/******* Detect change *******/
	reg counter_active; // From Counter blk
	reg SW_reg;
	always @(posedge clk)
		SW_reg <= SW;
		
	wire SW_change = counter_active ? 0 : SW_reg ^ SW;

	
	/******* Counter blk *******/
	localparam MAX_VALUE = 160000;
	
	reg [19:0] counter;
	always @(posedge clk)
		if (counter_active)
			if (counter == MAX_VALUE - 1)
			begin
				counter <= 0;
				counter_active <= 0;
			end else
				counter_active <= counter_active + 19'd1;
		else if (SW_change)
			counter_active <= 1;
			
	
	/******* SW_debounced *******/
	reg SW_new;
	always @(posedge clk)
		if (counter == MAX_VALUE - 1)
			SW_new <= SW;
			
	assign SW_debounced <= SW_new;
	
endmodule 